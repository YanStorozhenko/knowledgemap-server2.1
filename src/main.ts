import { NestFactory } from '@nestjs/core';
import { AppModule } from './app.module';
import { AppDataSource } from './data-source';
import { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';

import { Reflector } from '@nestjs/core';
import { AuthGuard } from '@nestjs/passport';



async function bootstrap() {
    await AppDataSource.initialize()
        .then(() => {
            console.log('‚úÖ Database connected successfully');
        })
        .catch((error) => {
            console.error('‚ùå Database connection failed:', error);
            process.exit(1);
        });

    const app = await NestFactory.create(AppModule, { cors: true });


    // –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Swagger
    const config = new DocumentBuilder()
        .setTitle('API Documentation')
        .setDescription('–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è API Knowladge Map')
        .setVersion('1.0')
        // –ø—ñ–¥—Ç—Ä–∏–º–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó —á–µ—Ä–µ–∑ JWT
        .addBearerAuth(
            {
                type: 'http',
                scheme: 'bearer',
                bearerFormat: 'JWT',
                name: 'Authorization',
                in: 'header',
            },
            'access-token',
        )


        .build();

    const document = SwaggerModule.createDocument(app, config);
    SwaggerModule.setup('api/docs', app, document);


    const reflector = app.get(Reflector);
    const guard = new (AuthGuard('jwt'))(reflector);
    console.log('üß™ JwtAuthGuard instance created:', typeof guard.canActivate === 'function');

    await app.listen(process.env.PORT || 3000);



    console.log(`üöÄ Server running on port ${process.env.PORT || 3000}`);
    console.log(`üìÑ Swagger available at http://localhost:${process.env.PORT || 3000}/api/docs`);
}

bootstrap();
